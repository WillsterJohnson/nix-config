#!/usr/bin/env bash

scriptDir=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
pushd $scriptDir &>/dev/null
logfile=nixos-switch.log

# Function to display help message
display_help() {
	echo "Usage: $0 [OPTIONS]"
	echo "Options:"
	echo "  --verbose             Enable verbose output"
	echo "  --format              Format only (no rebuild)"
	echo "  --sync                Sync changes after rebuild"
	echo "  --shell <shell>       Specify shell (default: zsh)"
	echo "  --help                Display this help message"
}

# Initialize variables
verbose=
format=
sync=
shell="zsh"

# Parse command line arguments
while [[ $# -gt 0 ]]; do
	case $1 in
		--verbose)
			verbose="--verbose"
			shift
			;;
		--format)
			format="--format"
			shift
			;;
		--sync)
			sync="--sync"
			shift
			;;
		--shell)
			if [[ -n $2 ]]; then
				shell=$2
				shift 2
			else
				echo "Error: --shell requires an argument" >&2
				exit 1
			fi
			;;
		--help)
			display_help
			exit 0
			;;
		*)
			echo "Error: Unknown option: $1" >&2
			exit 1
			;;
	esac
done

alejandra $scriptDir
exitCode=$?
if [[ $exitCode -ne 0 ]]; then
	exit $exitCode
fi
if [[ -n "$format" ]]; then
	exit 0
fi

git --no-pager diff -U0
read -p "Press enter to continue..." ________
git add .

echo "Validating $shellrc..."
shellrc=$(realpath $scriptDir/modules/home-manager/${shell}rc)
output=$($shell -c "source $shellrc" 2>&1)
exitCode=$?
if [[ $exitCode -ne 0 ]]; then
	echo "Error: $shellrc is invalid"
	echo "Output:"
	echo -e "$output"
	exit $exitCode
fi

echo "Updating Firefox addons listing..."
firefoxAddons=$(realpath $scriptDir/modules/home-manager/firefox-addons.json)
rm -f $firefoxAddons
nix flake show "gitlab:rycee/nur-expressions?dir=pkgs/firefox-addons" --json 2>/dev/null > $firefoxAddons
# TODO: do this without node
echo "const fs = require('node:fs');\
fs.writeFileSync('$firefoxAddons', JSON.stringify(\
	JSON.parse(fs.readFileSync('$firefoxAddons', 'utf8')).packages['x86_64-linux'],\
		null,\
		2\
	));" | node

echo "NixOS Rebuilding..."

last_line=""
sudo nixos-rebuild switch --upgrade --verbose --flake "${scriptDir}#default" 2>&1 | \
	while IFS= read -r line; do
		[ -n "$last_line" ] && printf "\033[1A\033[K"
		echo "$line" >> "$logfile"
		echo "$line"
		last_line="$line"
	done


exitCode=$?
echo "NixOS Rebuild finished with exit code $exitCode"
if [[ $exitCode -ne 0 ]]; then
	if [[ -n "$verbose" ]]; then
		cat $logfile
	else
		cat $logfile | grep --color error && false
	fi
	exit $exitCode
fi

git commit -m "$(nixos-rebuild list-generations | grep current)"
if [[ "$sync" == "--sync" ]]; then
	git push
else
	echo "To push the changes, run '$0 --sync'"
fi

popd &>/dev/null

exec $shell
